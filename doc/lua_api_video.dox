/**
\page lua_api_video Video

\tableofcontents

\c sol.video allows you to manage the window and to change the video mode.

The area where the game takes place has a fixed size called the quest size.
The quest size is in a range specified in
\ref quest_properties_file "quest.dat".
This quest size defines how much content the player can see on the map.
It is usually 320x240, but some systems may prefer other sizes,
like 400x240 on Android.
You should set a range of quest sizes in the quest properties files:
this is a good idea for portability.
However, it requires more work from the quest designer: in particular,
you have to implement menus and a HUD that can adapt to any size in this
range.
Note however that the quest size never changes after the program is started.

At runtime, the video mode can be changed. The video mode determines
the size of the window, whether it runs in fullscreen,
and how the quest screen is displayed on this
window when the window is larger.
All quest sizes are not necessarily supported as fullscreen resolutions, but
you don't have to worry:
Solarus automatically chooses an available fullscreen resolution that can
contain the quest size, possibly by adding black borders or by using a
resolution of double size (stretching the image by a factor of 2).

The video mode can be saved and loaded with the global settings,
as well as the language and the volume, independently of any savegame
(see \ref lua_api_main_load_settings "sol.main.load_settings()").

Video modes are identified by strings in the Lua API.
The following modes are implemented:
- \c "windowed_stretched" (default): The quest screen is stretched on a
  window of double size.
- \c "windowed_scale2x": The quest screen is scaled on a window of
  double size with the
  <a href="http://scale2x.sourceforge.net/algorithm.html">Scale2X</a>
  algorithm.
- \c "windowed_normal": The quest screen is displayed onto a window of the
  same size.
- \c "fullscreen_normal": The quest screen is displayed in fullscreen.
  Black borders are added if the exact resolution of the quest size
  or of twice the quest size are not available.
- \c "fullscreen_wide": The quest screen displayed in fullscreen onto a
  widescreen resolution with two black vertical borders.
- \c "fullscreen_scale2x": The quest screen is scaled on a surface of
  double size with the Scale2X algorithm, and then displayed in fullscreen
  with a resolution of that double size.
  Black borders are added if the exact resolution of twice the quest size
  is not available.
- \c "fullscreen_scale2x_wide": The quest screen is scaled on a surface of
  twice the quest size with the Scale2X algorithm, and then displayed in
  fullscreen onto a widescreen resolution with two black vertical borders.

Wide modes (\c "fullscreen_wide" and \c "fullscreen_scale2x_wide") look nice
on wide devices when the quest size has a ratio of 4:3. By adding two vertical
black borders, they try to keep pixels squares and therefore avoid distorsion.
However, it is even better if you allow your quest to have a larger range of
sizes (see \ref quest_properties_file "quest.dat").
Indeed, if your quest can
have a size like \c 400x240, the game can use the whole screen
without distorsion and the player can see more content.

\remark On some platforms, some video modes may be unavailable or disabled
  at compilation time. Use \ref lua_api_video_is_mode_supported
  "sol.video.is_mode_supported()" to test a
  video mode, and \ref lua_api_video_get_modes to know the list of
  video modes supported.

\section lua_api_video_functions Functions of sol.video

\subsection lua_api_video_get_window_title sol.video.get_window_title()

Returns the text of the title bar of the window.
- Return value (string): The window title.

\subsection lua_api_video_set_window_title sol.video.set_window_title(window_title)

Sets the text of the title bar of the window.

Note that the window title should already be specified in your
\ref quest_properties_file "quest.dat" file.
You usually don't have to call this function, unless you need to change it
dynamically for some reason.
- \c window_title (string): The window title to set.

\subsection lua_api_video_get_mode sol.video.get_mode()

Returns the current video mode.
- Return value (string): Name of the video mode (see the list above).

\subsection lua_api_video_set_mode sol.video.set_mode(video_mode)

Sets the current video mode.
- \c video_mode (string): Name of the video mode (see the list above).

\subsection lua_api_video_switch_mode sol.video.switch_mode()

Sets the next video mode in the list of video modes supported.

You can use this function if you want to change the video mode without
specifying which one to use.

\subsection lua_api_video_is_mode_supported sol.video.is_mode_supported(video_mode)

Returns whether a video mode is supported.
- \c video_mode (string): Name of a video mode (see the list above).

\subsection lua_api_video_get_modes sol.video.get_modes()

Returns an array of all video modes supported.
- \c Return value (table): An array of names of all video modes supported.

\subsection lua_api_video_is_fullscreen sol.video.is_fullscreen()

Returns whether the current video mode is fullscreen.
- Return value (boolean): \c true if the video mode is fullscreen.

\subsection lua_api_video_set_fullscreen sol.video.set_fullscreen([fullscreen])

Turns on or turns off fullscreen, keeping an equivalent video mode.
- \c fullscreen (boolean, optional): \c true to set fullscreen (no value means
  \c true).

\subsection lua_api_video_get_quest_size sol.video.get_quest_size()

Returns the size of the quest screen.

This quest size is fixed at runtime.
It is always in the range of allowed quest sizes specified in
\ref quest_properties_file "quest.dat".

The quest size is independent from the video mode:
video mode are just various methods to draw the quest screen on a window
or in fullscreen.
- Return value 1 (number): Width of the quest screen in pixels.
- Return value 2 (number): Height of the quest screen in pixels.

*/

