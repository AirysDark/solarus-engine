/**
\page quest_resource_file Resource list

The \c project_db.dat file is used by Solarus Quest Editor.
This file contains a list of all resources (maps, musics, sprites, items,
enemies, etc.) of the quest and their user-friendly names.
The quest editor needs this file to provide graphical components that let the
user choose a resource in a list of user-friendly names.
Each resource usually corresponds to a data file.

For instance, when the user creates a teletransporter on the map, a graphical
list lets him choose the destination map of the teletransporter.
This list contains the user-friendly name of each map.

Note that user-friendly names are only useful in the quest editor.
The engine does not use them.

We give here the syntax of \c project_db.dat.
This is a text file where each line represents a single resource element.
Each line has the following syntax:

\verbatim
resource_type        id        user-friendly name
\endverbatim

\c resource_type, \c id and <tt>user-friendly name</tt> can be separated
by an arbitrary number of spaces or tab characters.
\c resource_type is an integer identifying the type of resource (a map,
a music, a sprite, etc.).
\c id is a value that identifies the element. The id allows to find the
resource file(s). It may not contain spaces.
<tt>user-friendly name</tt> is a name that describes the resource for the
quest developers and may contain spaces.
The quest editor will display this name to the user, but will use the id
internally.

The current types of resources are:
- 0: a map (the id is the map file name without its extension),
- 1: a tileset (the id is the tileset file name without its extension),
- 2: a music (the id is the music file name without extension),
- 3: a sprite (the id is the sprite file name without extension),
- 4: a sound (the id is the music file name without extension),
- 5: an item (the id is the name of the item's Lua script without its extension),
- 6: an enemy (the id is the name of the enemy's Lua script without its extension),
- 7: a language (the id is the language code).

In the quest editor, you can add, remove, rename and change the id of resources
from the quest tree. Therefore, you probably don't need to edit this file by hand.

*/

